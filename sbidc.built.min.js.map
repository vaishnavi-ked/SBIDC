{"version":3,"sources":["sbidcnew.js","Public/seatchart/jquery.seat-charts.js"],"names":["define","sbidcnew","extolVirtues","$","fn","seatCharts","setup","this","data","seats","seatIds","settings","animate","naming","top","left","getId","character","row","column","getLabel","legend","node","items","click","status","style","focus","blur","seat","seatChartsSettings","extend","$node","attr","id","role","aria-checked","focusable","tabIndex","text","label","addClass","concat","classes","join","char","arguments","length","newStyle","oldStyle","switchClass","removeClass","seatSettings","each","index","callback","undefined","apply","on","$seat","e","$newSeat","which","preventDefault","findAvailable","$rows","$seats","$currentRow","$newRow","first","eq","last","find","hasClass","parents","rows","i","push","map","columns","split","$headerRow","append","value","characters","$row","match","characterParams","matches","params","overrideId","overrideLabel","$container","insertAfter","$ul","appendTo","item","seatsIds","newStatus","seatId","call","query","seatSet","set","RegExp","indexOf","parts","args","that","get","jQuery","global"],"mappings":"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","file":"sbidc.built.min.js","sourcesContent":["define('sbidcnew',[], function () {\r\n  'use strict';\r\n\r\n  /**\r\n   * Yarr 'tis a module\r\n   *\r\n   * @exports nmodule/sbidcnew/rc/sbidcnew\r\n   */\r\n  var sbidcnew = {};\r\n\r\n  /**\r\n   * Extol the virtues of sbidcnew.\r\n   *\r\n   * @returns {string}\r\n   */\r\n  sbidcnew.extolVirtues = function () {\r\n    return 'sbidcnew is great!';\r\n  };\r\n\r\n  return sbidcnew;\r\n});\r\n\n","/*!\r\n * jQuery-Seat-Charts v1.1.5\r\n * https://github.com/mateuszmarkowski/jQuery-Seat-Charts\r\n *\r\n * Copyright 2013, 2016 Mateusz Markowski\r\n * Released under the MIT license\r\n */\r\n\r\n(function($) {\r\n\t\t\r\n\t//'use strict';\t\r\n\t\t\r\n\t$.fn.seatCharts = function (setup) {\r\n\r\n\t\t//if there's seatCharts object associated with the current element, return it\r\n\t\tif (this.data('seatCharts')) {\r\n\t\t\treturn this.data('seatCharts');\r\n\t\t}\r\n\t\t\r\n\t\tvar fn       = this,\r\n\t\t\tseats    = {},\r\n\t\t\tseatIds  = [],\r\n\t\t\tlegend,\r\n\t\t\tsettings = {\r\n\t\t\t\tanimate : false, //requires jQuery UI\r\n\t\t\t\tnaming  : {\r\n\t\t\t\t\ttop    : true,\r\n\t\t\t\t\tleft   : true,\r\n\t\t\t\t\tgetId  : function(character, row, column) {\r\n\t\t\t\t\t\treturn row + '_' + column;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetLabel : function (character, row, column) {\r\n\t\t\t\t\t\treturn column;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t},\r\n\t\t\t\tlegend : {\r\n\t\t\t\t\tnode   : null,\r\n\t\t\t\t\titems  : []\r\n\t\t\t\t},\r\n\t\t\t\tclick   : function() {\r\n\r\n\t\t\t\t\tif (this.status() == 'available') {\r\n\t\t\t\t\t\treturn 'selected';\r\n\t\t\t\t\t} else if (this.status() == 'selected') {\r\n\t\t\t\t\t\treturn 'available';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn this.style();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t},\r\n\t\t\t\tfocus  : function() {\r\n\r\n\t\t\t\t\tif (this.status() == 'available') {\r\n\t\t\t\t\t\treturn 'focused';\r\n\t\t\t\t\t} else  {\r\n\t\t\t\t\t\treturn this.style();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tblur   : function() {\r\n\t\t\t\t\treturn this.status();\r\n\t\t\t\t},\r\n\t\t\t\tseats   : {}\r\n\t\t\t\r\n\t\t\t},\r\n\t\t\t//seat will be basically a seat object which we'll when generating the map\r\n\t\t\tseat = (function(seatCharts, seatChartsSettings) {\r\n\t\t\t\treturn function (setup) {\r\n\t\t\t\t\tvar fn = this;\r\n\t\t\t\t\t\r\n\t\t\t\t\tfn.settings = $.extend({\r\n\t\t\t\t\t\tstatus : 'available', //available, unavailable, selected\r\n\t\t\t\t\t\tstyle  : 'available',\r\n\t\t\t\t\t\t//make sure there's an empty hash if user doesn't pass anything\r\n\t\t\t\t\t\tdata   : seatChartsSettings.seats[setup.character] || {}\r\n\t\t\t\t\t\t//anything goes here?\r\n\t\t\t\t\t}, setup);\r\n\r\n\t\t\t\t\tfn.settings.$node = $('<div></div>');\r\n\t\t\t\t\t\r\n\t\t\t\t\tfn.settings.$node\r\n\t\t\t\t\t\t.attr({\r\n\t\t\t\t\t\t\tid             : fn.settings.id,\r\n\t\t\t\t\t\t\trole           : 'checkbox',\r\n\t\t\t\t\t\t\t'aria-checked' : false,\r\n\t\t\t\t\t\t\tfocusable      : true,\r\n\t\t\t\t\t\t\ttabIndex       : -1 //manual focus\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.text(fn.settings.label)\r\n\t\t\t\t\t\t.addClass(['seatCharts-seat', 'seatCharts-cell', 'available'].concat(\r\n\t\t\t\t\t\t\t//let's merge custom user defined classes with standard JSC ones\r\n\t\t\t\t\t\t\tfn.settings.classes, \r\n\t\t\t\t\t\t\ttypeof seatChartsSettings.seats[fn.settings.character] == \"undefined\" ? \r\n\t\t\t\t\t\t\t\t[] : seatChartsSettings.seats[fn.settings.character].classes\r\n\t\t\t\t\t\t\t).join(' '));\r\n\t\t\t\t\t\r\n\t\t\t\t\t//basically a wrapper function\r\n\t\t\t\t\tfn.data = function() {\r\n\t\t\t\t\t\treturn fn.settings.data;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\tfn.char = function() {\r\n\t\t\t\t\t\treturn fn.settings.character;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\tfn.node = function() {\r\n\t\t\t\t\t\treturn fn.settings.$node;\t\t\t\t\t\t\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * Can either set or return status depending on arguments.\r\n\t\t\t\t\t *\r\n\t\t\t\t\t * If there's no argument, it will return the current style.\r\n\t\t\t\t\t *\r\n\t\t\t\t\t * If you pass an argument, it will update seat's style\r\n\t\t\t\t\t */\r\n\t\t\t\t\tfn.style = function() {\r\n\r\n\t\t\t\t\t\treturn arguments.length == 1 ?\r\n\t\t\t\t\t\t\t(function(newStyle) {\r\n\t\t\t\t\t\t\t\tvar oldStyle = fn.settings.style;\r\n\r\n\t\t\t\t\t\t\t\t//if nothing changes, do nothing\r\n\t\t\t\t\t\t\t\tif (newStyle == oldStyle) {\r\n\t\t\t\t\t\t\t\t\treturn oldStyle;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//focused is a special style which is not associated with status\r\n\t\t\t\t\t\t\t\tfn.settings.status = newStyle != 'focused' ? newStyle : fn.settings.status;\r\n\t\t\t\t\t\t\t\tfn.settings.$node\r\n\t\t\t\t\t\t\t\t\t.attr('aria-checked', newStyle == 'selected');\r\n\r\n\t\t\t\t\t\t\t\t//if user wants to animate status changes, let him do this\r\n\t\t\t\t\t\t\t\tseatChartsSettings.animate ?\r\n\t\t\t\t\t\t\t\t\tfn.settings.$node.switchClass(oldStyle, newStyle, 200) :\r\n\t\t\t\t\t\t\t\t\tfn.settings.$node.removeClass(oldStyle).addClass(newStyle);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn fn.settings.style = newStyle;\r\n\t\t\t\t\t\t\t})(arguments[0]) : fn.settings.style;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\t//either set or retrieve\r\n\t\t\t\t\tfn.status = function() {\r\n\t\r\n\t\t\t\t\t\treturn fn.settings.status = arguments.length == 1 ? \r\n\t\t\t\t\t\t\tfn.style(arguments[0]) : fn.settings.status;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\t//using immediate function to convienietly get shortcut variables\r\n\t\t\t\t\t(function(seatSettings, character, seat) {\r\n\t\t\t\t\t\t//attach event handlers\r\n\t\t\t\t\t\t$.each(['click', 'focus', 'blur'], function(index, callback) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//we want to be able to call the functions for each seat object\r\n\t\t\t\t\t\t\tfn[callback] = function() {\r\n\t\t\t\t\t\t\t\tif (callback == 'focus') {\r\n\t\t\t\t\t\t\t\t\t//if there's already a focused element, we have to remove focus from it first\r\n\t\t\t\t\t\t\t\t\tif (seatCharts.attr('aria-activedescendant') !== undefined) {\r\n\t\t\t\t\t\t\t\t\t\tseats[seatCharts.attr('aria-activedescendant')].blur();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tseatCharts.attr('aria-activedescendant', seat.settings.id);\r\n\t\t\t\t\t\t\t\t\tseat.node().focus();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t\t * User can pass his own callback function, so we have to first check if it exists\r\n\t\t\t\t\t\t\t\t * and if not, use our default callback.\r\n\t\t\t\t\t\t\t\t *\r\n\t\t\t\t\t\t\t\t * Each callback function is executed in the current seat context.\r\n\t\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\t\treturn fn.style(typeof seatSettings[character][callback] === 'function' ?\r\n\t\t\t\t\t\t\t\t\tseatSettings[character][callback].apply(seat) : seatChartsSettings[callback].apply(seat));\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t//the below will become seatSettings, character, seat thanks to the immediate function\t\t\r\n\t\t\t\t\t})(seatChartsSettings.seats, fn.settings.character, fn);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\tfn.node()\r\n\t\t\t\t\t\t//the first three mouse events are simple\r\n\t\t\t\t\t\t.on('click',      fn.click)\r\n\t\t\t\t\t\t.on('mouseenter', fn.focus)\r\n\t\t\t\t\t\t.on('mouseleave', fn.blur)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//keydown requires quite a lot of logic, because we have to know where to move the focus\r\n\t\t\t\t\t\t.on('keydown',    (function(seat, $seat) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treturn function (e) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar $newSeat;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//everything depends on the pressed key\r\n\t\t\t\t\t\t\t\tswitch (e.which) {\r\n\t\t\t\t\t\t\t\t\t//spacebar will just trigger the same event mouse click does\r\n\t\t\t\t\t\t\t\t\tcase 32:\r\n\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\tseat.click();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t//UP & DOWN\r\n\t\t\t\t\t\t\t\t\tcase 40:\r\n\t\t\t\t\t\t\t\t\tcase 38:\r\n\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t\t\t\t * This is a recursive, immediate function which searches for the first \"focusable\" row.\r\n\t\t\t\t\t\t\t\t\t\t * \r\n\t\t\t\t\t\t\t\t\t\t * We're using immediate function because we want a convenient access to some DOM elements\r\n\t\t\t\t\t\t\t\t\t\t * We're using recursion because sometimes we may hit an empty space rather than a seat.\r\n\t\t\t\t\t\t\t\t\t\t *\r\n\t\t\t\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\t\t\t\t$newSeat = (function findAvailable($rows, $seats, $currentRow) {\r\n\t\t\t\t\t\t\t\t\t\t\tvar $newRow;\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t//let's determine which row should we move to\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tif (!$rows.index($currentRow) && e.which == 38) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t//if this is the first row and user has pressed up arrow, move to the last row\r\n\t\t\t\t\t\t\t\t\t\t\t\t$newRow = $rows.last();\r\n\t\t\t\t\t\t\t\t\t\t\t} else if ($rows.index($currentRow) == $rows.length-1 && e.which == 40) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t//if this is the last row and user has pressed down arrow, move to the first row\r\n\t\t\t\t\t\t\t\t\t\t\t\t$newRow = $rows.first();\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t//using eq to get an element at the desired index position\r\n\t\t\t\t\t\t\t\t\t\t\t\t$newRow = $rows.eq(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t//if up arrow, then decrement the index, if down increment it\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t$rows.index($currentRow) + (e.which == 38 ? (-1) : (+1))\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t//now that we know the row, let's get the seat using the current column position\r\n\t\t\t\t\t\t\t\t\t\t\t$newSeat = $newRow.find('.seatCharts-seat,.seatCharts-space').eq($seats.index($seat));\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t//if the seat we found is a space, keep looking further\r\n\t\t\t\t\t\t\t\t\t\t\treturn $newSeat.hasClass('seatCharts-space') ?\r\n\t\t\t\t\t\t\t\t\t\t\t\tfindAvailable($rows, $seats, $newRow) : $newSeat;\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t})($seat\r\n\t\t\t\t\t\t\t\t\t\t\t//get a reference to the parent container and then select all rows but the header\r\n\t\t\t\t\t\t\t\t\t\t\t\t.parents('.seatCharts-container')\r\n\t\t\t\t\t\t\t\t\t\t\t\t.find('.seatCharts-row:not(.seatCharts-header)'),\r\n\t\t\t\t\t\t\t\t\t\t\t$seat\r\n\t\t\t\t\t\t\t\t\t\t\t//get a reference to the parent row and then find all seat cells (both seats & spaces)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.parents('.seatCharts-row:first')\r\n\t\t\t\t\t\t\t\t\t\t\t\t.find('.seatCharts-seat,.seatCharts-space'),\r\n\t\t\t\t\t\t\t\t\t\t\t//get a reference to the current row\r\n\t\t\t\t\t\t\t\t\t\t\t$seat.parents('.seatCharts-row:not(.seatCharts-header)')\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t//we couldn't determine the new seat, so we better give up\r\n\t\t\t\t\t\t\t\t\t\tif (!$newSeat.length) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t//remove focus from the old seat and put it on the new one\r\n\t\t\t\t\t\t\t\t\t\tseat.blur();\r\n\t\t\t\t\t\t\t\t\t\tseats[$newSeat.attr('id')].focus();\r\n\t\t\t\t\t\t\t\t\t\t$newSeat.focus();\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t//update our \"aria\" reference with the new seat id\r\n\t\t\t\t\t\t\t\t\t\tseatCharts.attr('aria-activedescendant', $newSeat.attr('id'));\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t//LEFT & RIGHT\r\n\t\t\t\t\t\t\t\t\tcase 37:\r\n\t\t\t\t\t\t\t\t\tcase 39:\r\n\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t\t\t\t * The logic here is slightly different from the one for up/down arrows.\r\n\t\t\t\t\t\t\t\t\t\t * User will be able to browse the whole map using just left/right arrow, because\r\n\t\t\t\t\t\t\t\t\t\t * it will move to the next row when we reach the right/left-most seat.\r\n\t\t\t\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\t\t\t\t$newSeat = (function($seats) {\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tif (!$seats.index($seat) && e.which == 37) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t//user has pressed left arrow and we're currently on the left-most seat\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn $seats.last();\r\n\t\t\t\t\t\t\t\t\t\t\t} else if ($seats.index($seat) == $seats.length -1 && e.which == 39) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t//user has pressed right arrow and we're currently on the right-most seat\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn $seats.first();\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t//simply move one seat left or right depending on the key\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn $seats.eq($seats.index($seat) + (e.which == 37 ? (-1) : (+1)));\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t})($seat\r\n\t\t\t\t\t\t\t\t\t\t\t.parents('.seatCharts-container:first')\r\n\t\t\t\t\t\t\t\t\t\t\t.find('.seatCharts-seat:not(.seatCharts-space)'));\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tif (!$newSeat.length) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t//handle focus\r\n\t\t\t\t\t\t\t\t\t\tseat.blur();\t\r\n\t\t\t\t\t\t\t\t\t\tseats[$newSeat.attr('id')].focus();\r\n\t\t\t\t\t\t\t\t\t\t$newSeat.focus();\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t//update our \"aria\" reference with the new seat id\r\n\t\t\t\t\t\t\t\t\t\tseatCharts.attr('aria-activedescendant', $newSeat.attr('id'));\r\n\t\t\t\t\t\t\t\t\t\tbreak;\t\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t})(fn, fn.node()));\r\n\t\t\t\t\t\t//.appendTo(seatCharts.find('.' + row));\r\n\r\n\t\t\t\t}\r\n\t\t\t})(fn, settings);\r\n\t\t\t\r\n\t\tfn.addClass('seatCharts-container');\r\n\t\t\r\n\t\t//true -> deep copy!\r\n\t\t$.extend(true, settings, setup);\t\t\r\n\t\t\r\n\t\t//Generate default row ids unless user passed his own\r\n\t\tsettings.naming.rows = settings.naming.rows || (function(length) {\r\n\t\t\tvar rows = [];\r\n\t\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\t\trows.push(i);\r\n\t\t\t}\r\n\t\t\treturn rows;\r\n\t\t})(settings.map.length);\r\n\t\t\r\n\t\t//Generate default column ids unless user passed his own\r\n\t\tsettings.naming.columns = settings.naming.columns || (function(length) {\r\n\t\t\tvar columns = [];\r\n\t\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\t\tcolumns.push(i);\r\n\t\t\t}\r\n\t\t\treturn columns;\r\n\t\t})(settings.map[0].split('').length);\r\n\t\t\r\n\t\tif (settings.naming.top) {\r\n\t\t\tvar $headerRow = $('<div></div>')\r\n\t\t\t\t.addClass('seatCharts-row seatCharts-header');\r\n\t\t\t\r\n\t\t\tif (settings.naming.left) {\r\n\t\t\t\t$headerRow.append($('<div></div>').addClass('seatCharts-cell'));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t$.each(settings.naming.columns, function(index, value) {\r\n\t\t\t\t$headerRow.append(\r\n\t\t\t\t\t$('<div></div>')\r\n\t\t\t\t\t\t.addClass('seatCharts-cell')\r\n\t\t\t\t\t\t.text(value)\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tfn.append($headerRow);\r\n\t\t\r\n\t\t//do this for each map row\r\n\t\t$.each(settings.map, function(row, characters) {\r\n\r\n\t\t\tvar $row = $('<div></div>').addClass('seatCharts-row');\r\n\t\t\t\t\r\n\t\t\tif (settings.naming.left) {\r\n\t\t\t\t$row.append(\r\n\t\t\t\t\t$('<div></div>')\r\n\t\t\t\t\t\t.addClass('seatCharts-cell seatCharts-space')\r\n\t\t\t\t\t\t.text(settings.naming.rows[row])\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t/*\r\n\t\t\t * Do this for each seat (letter)\r\n\t\t\t *\r\n\t\t\t * Now users will be able to pass custom ID and label which overwrite the one that seat would be assigned by getId and\r\n\t\t\t * getLabel\r\n\t\t\t *\r\n\t\t\t * New format is like this:\r\n\t\t\t * a[ID,label]a[ID]aaaaa\r\n\t\t\t *\r\n\t\t\t * So you can overwrite the ID or label (or both) even for just one seat.\r\n\t\t\t * Basically ID should be first, so if you want to overwrite just label write it as follows:\r\n\t\t\t * a[,LABEL]\r\n\t\t\t *\r\n\t\t\t * Allowed characters in IDs areL 0-9, a-z, A-Z, _\r\n\t\t\t * Allowed characters in labels are: 0-9, a-z, A-Z, _, ' ' (space)\r\n\t\t\t *\r\n\t\t\t */\r\n\t\t\t \r\n\t\t\t$.each(characters.match(/[a-z_]{1}(\\[[0-9a-z_]{0,}(,[0-9a-z_ ]+)?\\])?/gi), function (column, characterParams) { \r\n\t\t\t\tvar matches         = characterParams.match(/([a-z_]{1})(\\[([0-9a-z_ ,]+)\\])?/i),\r\n\t\t\t\t\t//no matter if user specifies [] params, the character should be in the second element\r\n\t\t\t\t\tcharacter       = matches[1],\r\n\t\t\t\t\t//check if user has passed some additional params to override id or label\r\n\t\t\t\t\tparams          = typeof matches[3] !== 'undefined' ? matches[3].split(',') : [],\r\n\t\t\t\t\t//id param should be first\r\n\t\t\t\t\toverrideId      = params.length ? params[0] : null,\r\n\t\t\t\t\t//label param should be second\r\n\t\t\t\t\toverrideLabel   = params.length === 2 ? params[1] : null;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t$row.append(character != '_' ?\r\n\t\t\t\t\t//if the character is not an underscore (empty space)\r\n\t\t\t\t\t(function(naming) {\r\n\t\r\n\t\t\t\t\t\t//so users don't have to specify empty objects\r\n\t\t\t\t\t\tsettings.seats[character] = character in settings.seats ? settings.seats[character] : {};\r\n\t\r\n\t\t\t\t\t\tvar id = overrideId ? overrideId : naming.getId(character, naming.rows[row], naming.columns[column]);\r\n\t\t\t\t\t\tseats[id] = new seat({\r\n\t\t\t\t\t\t\tid        : id,\r\n\t\t\t\t\t\t\tlabel     : overrideLabel ?\r\n\t\t\t\t\t\t\t\toverrideLabel : naming.getLabel(character, naming.rows[row], naming.columns[column]),\r\n\t\t\t\t\t\t\trow       : row,\r\n\t\t\t\t\t\t\tcolumn    : column,\r\n\t\t\t\t\t\t\tcharacter : character\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tseatIds.push(id);\r\n\t\t\t\t\t\treturn seats[id].node();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t})(settings.naming) :\r\n\t\t\t\t\t//this is just an empty space (_)\r\n\t\t\t\t\t$('<div></div>').addClass('seatCharts-cell seatCharts-space')\t\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tfn.append($row);\r\n\t\t});\r\n\t\r\n\t\t//if there're any legend items to be rendered\r\n\t\tsettings.legend.items.length ? (function(legend) {\r\n\t\t\t//either use user-defined container or create our own and insert it right after the seat chart div\r\n\t\t\tvar $container = (legend.node || $('<div></div>').insertAfter(fn))\r\n\t\t\t\t.addClass('seatCharts-legend');\r\n\t\t\t\t\r\n\t\t\tvar $ul = $('<ul></ul>')\r\n\t\t\t\t.addClass('seatCharts-legendList')\r\n\t\t\t\t.appendTo($container);\r\n\t\t\t\r\n\t\t\t$.each(legend.items, function(index, item) {\r\n\t\t\t\t$ul.append(\r\n\t\t\t\t\t$('<li></li>')\r\n\t\t\t\t\t\t.addClass('seatCharts-legendItem')\r\n\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\t$('<div></div>')\r\n\t\t\t\t\t\t\t\t//merge user defined classes with our standard ones\r\n\t\t\t\t\t\t\t\t.addClass(['seatCharts-seat', 'seatCharts-cell', item[1]].concat(\r\n\t\t\t\t\t\t\t\t\tsettings.classes, \r\n\t\t\t\t\t\t\t\t\ttypeof settings.seats[item[0]] == \"undefined\" ? [] : settings.seats[item[0]].classes).join(' ')\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\t$('<span></span>')\r\n\t\t\t\t\t\t\t\t.addClass('seatCharts-legendDescription')\r\n\t\t\t\t\t\t\t\t.text(item[2])\r\n\t\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn $container;\r\n\t\t})(settings.legend) : null;\r\n\t\r\n\t\tfn.attr({\r\n\t\t\ttabIndex : 0\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\t//when container's focused, move focus to the first seat\r\n\t\tfn.focus(function() {\r\n\t\t\tif (fn.attr('aria-activedescendant')) {\r\n\t\t\t\tseats[fn.attr('aria-activedescendant')].blur();\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tfn.find('.seatCharts-seat:not(.seatCharts-space):first').focus();\r\n\t\t\tseats[seatIds[0]].focus();\r\n\r\n\t\t});\r\n\t\r\n\t\t//public methods of seatCharts\r\n\t\tfn.data('seatCharts', {\r\n\t\t\tseats   : seats,\r\n\t\t\tseatIds : seatIds,\r\n\t\t\t//set for one, set for many, get for one\r\n\t\t\tstatus: function() {\r\n\t\t\t\tvar fn = this;\r\n\t\t\t\r\n\t\t\t\treturn arguments.length == 1 ? fn.seats[arguments[0]].status() : (function(seatsIds, newStatus) {\r\n\t\t\t\t\r\n\t\t\t\t\treturn typeof seatsIds == 'string' ? fn.seats[seatsIds].status(newStatus) : (function() {\r\n\t\t\t\t\t\t$.each(seatsIds, function(index, seatId) {\r\n\t\t\t\t\t\t\tfn.seats[seatId].status(newStatus);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})();\r\n\t\t\t\t})(arguments[0], arguments[1]);\r\n\t\t\t},\r\n\t\t\teach  : function(callback) {\r\n\t\t\t\tvar fn = this;\r\n\t\t\t\r\n\t\t\t\tfor (var seatId in fn.seats) {\r\n\t\t\t\t\tif (false === callback.call(fn.seats[seatId], seatId)) {\r\n\t\t\t\t\t\treturn seatId;//return last checked\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\tnode       : function() {\r\n\t\t\t\tvar fn = this;\r\n\t\t\t\t//basically create a CSS query to get all seats by their DOM ids\r\n\t\t\t\treturn $('#' + fn.seatIds.join(',#'));\r\n\t\t\t},\r\n\r\n\t\t\tfind       : function(query) {//D, a.available, unavailable\r\n\t\t\t\tvar fn = this;\r\n\t\t\t\r\n\t\t\t\tvar seatSet = fn.set();\r\n\t\t\t\r\n\t\t\t\t//is RegExp\r\n\t\t                return query instanceof RegExp ?\r\n\t\t                    (function () {\r\n\t\t                        fn.each(function (id) {\r\n\t\t                            if (id.match(query)) {\r\n\t\t                                seatSet.push(id, this);\r\n\t\t                            }\r\n\t\t                        });\r\n\t\t                        return seatSet;\r\n\t\t                    })() :\r\n\t\t                    (query.length == 1 ?\r\n\t\t                            (function (character) {\r\n\t\t                                //user searches just for a particual character\r\n\t\t                                fn.each(function () {\r\n\t\t                                    if (this.char() == character) {\r\n\t\t                                        seatSet.push(this.settings.id, this);\r\n\t\t                                    }\r\n\t\t                                });\r\n\t\t\r\n\t\t                                return seatSet;\r\n\t\t                            })(query) :\r\n\t\t                            (function () {\r\n\t\t                                //user runs a more sophisticated query, so let's see if there's a dot\r\n\t\t                                return query.indexOf('.') > -1 ?\r\n\t\t                                    (function () {\r\n\t\t                                        //there's a dot which separates character and the status\r\n\t\t                                        var parts = query.split('.');\r\n\t\t\r\n\t\t                                        fn.each(function (seatId) {\r\n\t\t                                            if (this.char() == parts[0] && this.status() == parts[1]) {\r\n\t\t                                                seatSet.push(this.settings.id, this);\r\n\t\t                                            }\r\n\t\t                                        });\r\n\t\t\r\n\t\t                                        return seatSet;\r\n\t\t                                    })() :\r\n\t\t                                    (function () {\r\n\t\t                                        fn.each(function () {\r\n\t\t                                            if (this.status() == query) {\r\n\t\t                                                seatSet.push(this.settings.id, this);\r\n\t\t                                            }\r\n\t\t                                        });\r\n\t\t                                        return seatSet;\r\n\t\t                                    })();\r\n\t\t                            })()\r\n\t\t                    );\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tset        : function set() {//inherits some methods\r\n\t\t\t\tvar fn = this;\r\n\t\t\t\t\r\n\t\t\t\treturn {\r\n\t\t\t\t\tseats      : [],\r\n\t\t\t\t\tseatIds    : [],\r\n\t\t\t\t\tlength     : 0,\r\n\t\t\t\t\tstatus     : function() {\r\n\t\t\t\t\t\tvar args = arguments,\r\n\t\t\t\t\t\t\tthat = this;\r\n\t\t\t\t\t\t//if there's just one seat in the set and user didn't pass any params, return current status\r\n\t\t\t\t\t\treturn this.length == 1 && args.length == 0 ? this.seats[0].status() : (function() {\r\n\t\t\t\t\t\t\t//otherwise call status function for each of the seats in the set\r\n\t\t\t\t\t\t\t$.each(that.seats, function() {\r\n\t\t\t\t\t\t\t\tthis.status.apply(this, args);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t})();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnode       : function() {\r\n\t\t\t\t\t\treturn fn.node.call(this);\r\n\t\t\t\t\t},\r\n\t\t\t\t\teach       : function() {\r\n\t\t\t\t\t\treturn fn.each.call(this, arguments[0]);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tget        : function() {\r\n\t\t\t\t\t\treturn fn.get.call(this, arguments[0]);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfind       : function() {\r\n\t\t\t\t\t\treturn fn.find.call(this, arguments[0]);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tset       : function() {\r\n\t\t\t\t\t\treturn set.call(fn);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpush       : function(id, seat) {\r\n\t\t\t\t\t\tthis.seats.push(seat);\r\n\t\t\t\t\t\tthis.seatIds.push(id);\r\n\t\t\t\t\t\t++this.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t//get one object or a set of objects\r\n\t\t\tget   : function(seatsIds) {\r\n\t\t\t\tvar fn = this;\r\n\r\n\t\t\t\treturn typeof seatsIds == 'string' ? \r\n\t\t\t\t\tfn.seats[seatsIds] : (function() {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar seatSet = fn.set();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$.each(seatsIds, function(index, seatId) {\r\n\t\t\t\t\t\t\tif (typeof fn.seats[seatId] === 'object') {\r\n\t\t\t\t\t\t\t\tseatSet.push(seatId, fn.seats[seatId]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn seatSet;\r\n\t\t\t\t\t})();\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn fn.data('seatCharts');\r\n\t}\r\n\t\r\n\t\r\n})(jQuery);\r\n\ndefine(\"seatCharts\", [\"jquery\"], (function (global) {\n    return function () {\n        var ret, fn;\n        return ret || global.$.fn.seatCharts;\n    };\n}(this)));\n\n"]}